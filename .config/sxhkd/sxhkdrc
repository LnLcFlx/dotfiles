# Special keys
XF86AudioMute
    pactl set-sink-mute 0 toggle
{XF86AudioLowerVolume,XF86AudioRaiseVolume}
    pactl set-sink-mute 0 false ; pactl set-sink-volume 0 {-,+}5%
#XF86AudioMicMute
{XF86MonBrightnessDown,XF86MonBrightnessUp}
    xbacklight {-dec,-inc} 5
{XF86AudioPlay,XF86AudioStop,XF86AudioNext,XF86AudioPrev}
    mpc {toggle,stop,next,prev} -h $(mpd-host)
super + {XF86AudioLowerVolume,XF86AudioRaiseVolume}
    mpc -h $(mpd-host) volume {-,+}5
{_,super + ,shift + }Print
    magick import {_,-window $(bspc query -N -n focused),-window root} ~/$(date '+%Y_%m_%d_%H_%M_%S').jpg


# Launch
super + Return
    kitty
super + space
    rofi -show combi
#super + alt + space
#    kitty bash -c ranger-open

super {_,+ r; }c
    rofi -show clipboard
super {_,+ r; }Escape
    rofi-power

super + alt + q
    bspc quit
super + {alt + r,r; b}
    bspc wm -r
super + r; {p,s,c}
    pkill -USR1 {polybar,sxhkd,picom}

# close and kill window
super + {_,shift + }q
    bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
    bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
    bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
    bspc node -s biggest


#tabs
super + t; t
    tabbedid=$(tabbed -d | tail -1); \
    tabc $tabbedid add $(bspc query -N -n older)

super + t; n
    tabbed &

super + t; {h,j,k,l}
    tabc $(bspc query -N -n {west,south,north,east}) add $(bspc query -N -n focused)

super + t; r
    tabbed=$(bspc query -N -n focused); \
    child=$(tabc $tabbed list | head -n1); \
    tabc $tabbed remove $child


# window state
super + s
    if [ -z "$(bspc query -N -n focused.floating)" ]; then \
        bspc node focused -t floating; \
    else \
        bspc node focused -t tiled; \
    fi
super + f
    if [ -z "$(bspc query -N -n focused.fullscreen)" ]; then \
        bspc node focused -t fullscreen; \
    else \
        bspc node focused -t tiled; \
    fi

# change focus or move node
super + {_,shift + }{h,j,k,l}
    bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
    bspc node -f @{parent,brother,first,second}

# next/previous window
super + {_,shift + }n
    bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
    bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
    bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
    bspc wm -h off; \
    bspc node {older,newer} -f; \
    bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} '^{1-9,10}'


# node flags
super + ctrl + {m,x,y,z}
    bspc node -g {marked,locked,sticky,private}

# preselect the direction
super + ctrl + {h,j,k,l}
    bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
    bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
    bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + Escape
    bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel


# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
    bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
    bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
    bspc node -v {-20 0,0 20,0 -20,20 0}
